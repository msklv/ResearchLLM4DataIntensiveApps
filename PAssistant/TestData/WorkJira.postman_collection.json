{
	"info": {
		"_postman_id": "c2192ef3-dc3f-476c-b15d-34070b82a094",
		"name": "WorkJira",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1907314"
	},
	"item": [
		{
			"name": "jql2json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(10000);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Presence of required fields in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property(\"startAt\");",
							"    pm.expect(responseData).to.have.property(\"maxResults\");",
							"    pm.expect(responseData).to.have.property(\"total\");",
							"    pm.expect(responseData).to.have.property(\"issues\");",
							"    pm.expect(responseData.issues).to.be.an('array');",
							"    responseData.issues.forEach(function(issue) {",
							"        pm.expect(issue).to.have.property(\"key\");",
							"        pm.expect(issue).to.have.property(\"fields\");",
							"        pm.expect(issue.fields).to.have.property(\"issuetype\");",
							"        pm.expect(issue.fields).to.have.property(\"project\");",
							"        pm.expect(issue.fields).to.have.property(\"summary\");",
							"        pm.expect(issue.fields).to.have.property(\"status\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Issues array should exist and be an array\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.issues).to.be.an('array');",
							"    responseData.issues.forEach(function(issue) {",
							"        pm.expect(issue).to.be.an('object');",
							"        pm.expect(issue.expand).to.be.a('string');",
							"        pm.expect(issue.id).to.be.a('string');",
							"        pm.expect(issue.self).to.be.a('string');",
							"        pm.expect(issue.key).to.be.a('string');",
							"        pm.expect(issue.fields).to.be.an('object');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Expand, startAt, maxResults, and total fields have valid values\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.expand).to.exist.and.to.not.be.empty;",
							"    pm.expect(responseData.startAt).to.exist.and.to.be.a('number');",
							"    pm.expect(responseData.maxResults).to.exist.and.to.be.a('number');",
							"    pm.expect(responseData.total).to.exist.and.to.be.a('number');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{vault:Work_jira_url}}/rest/api/2/search?jql=project=IMP and (\"Epic Link\"=IMP-2744 or component=\"Команда DevOps\") ORDER BY Rank ASC",
					"host": [
						"{{vault:Work_jira_url}}"
					],
					"path": [
						"rest",
						"api",
						"2",
						"search"
					],
					"query": [
						{
							"key": "jql",
							"value": "project=IMP and (\"Epic Link\"=IMP-2744 or component=\"Команда DevOps\") ORDER BY Rank ASC"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{vault:Work_jira_pat}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}